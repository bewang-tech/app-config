buildscript {
    repositories {
        mavenCentral()
        maven {
            url "http://dl.bintray.com/ramonza/gradle-plugins"
        }
        jcenter()
    }
    dependencies {
        classpath "org.ajoberstar:grgit:1.3.0"
        classpath "com.github.maiflai:gradle-scalatest:0.12"
    }
}

plugins {
    id "scala"
    id "maven-publish"
    id "distribution"
    id "nebula.provided-base" version "3.0.3"
}

apply plugin: "com.github.maiflai.scalatest"

sourceCompatibility = 1.7
targetCompatibility = 1.7

def scalaMajor = "2.11"
def scalaVersion = "2.11.8"

ext {
    git = org.ajoberstar.grgit.Grgit.open(currentDir: project.projectDir)
    revision = git.head().id
    gitVersion = git.describe().replaceFirst(/^(?i)v/, "")
    testWorkingDir = file("${buildDir}/test-tmp")
}

group = "com.napster.bi"
version = gitVersion
description = "Typesafe Config Extension"

jar {
    manifest {
        attributes "Implementation-Title": description,
                "Implementation-Version": revision
    }
}

repositories {
    maven { url "http://maven01.internal.rhapsody.com/nexus/content/groups/public" }
}

dependencies {
    compile "com.typesafe:config:1.2.1"
    compile "org.scala-lang:scala-library:$scalaVersion"
    compile "org.scala-lang:scala-reflect:$scalaVersion"

    testCompile "org.scalatest:scalatest_$scalaMajor:2.2.6"
    testCompile "org.scalacheck:scalacheck_$scalaMajor:1.12.5"

    testRuntime "org.pegdown:pegdown:1.1.0"
}

test.doFirst {
    testWorkingDir.mkdirs()
}

test {
    systemProperties "property": "value"
    maxParallelForks = 1
    workingDir testWorkingDir
}

task wrapper(type: Wrapper) { gradleVersion = "2.13" }

task scalaDocJar(type: Jar, dependsOn: scaladoc) {
    classifier = 'scaladoc'
    from scaladoc.destinationDir
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives scalaDocJar, sourcesJar
}

publishing {
    repositories {
        maven {
            name "rhapsody"
            url "http://maven01.internal.rhapsody.com/nexus/content/repositories/releases"
            credentials {
                username "$mavenUser"
                password "$mavenPassword"
            }
        }
    }
    publications {
        maven(MavenPublication) {
            from components.java
            artifact(scalaDocJar) {
                classifier = 'scaladoc'
            }
            artifact(sourcesJar) {
                classifier = 'sources'
            }
        }
    }
}
